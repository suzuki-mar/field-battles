openapi: 3.0.0
info:
  title: field-battles
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /players:
    parameters: []
    post:
      summary: Players SignUp
      operationId: post-users-userId
      responses:
        '200':
          description: 正しく作成できた場合
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 鈴木太郎
                age:
                  type: number
                  minimum: 18
                  maximum: 65
                inventory:
                  type: array
                  items:
                    $ref: '#/components/schemas/ItemStockParam'
            examples:
              example:
                value:
                  name: 鈴木太郎
                  age: 18
                  inventory:
                    - name: fiji_water
                      count: 0
        description: ''
  '/players/{player_id}/inventory':
    put:
      summary: ExchangeItems
      operationId: put-players-inventory
      responses:
        '200':
          description: 交換に成功した
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - success
                    example: success
              examples:
                example-1:
                  value:
                    status: success
        '400':
          description: |
            以下の場合にエラーになる
            ＊指定したプレイヤーが生存者ではなくゾンビ等の場合
            ＊交換するアイテム分のポイントが等しくないない場合
            ＊パートナーが生存していない場合
            ＊交換しようとしたアイテムが存在しない場合
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example(文言は例):
                  value:
                    - 存在しないプレイヤーと交換しようとしました
      description: していした生存者とアイテムを交換する
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                partner_player_id:
                  type: number
                  example: 2
                requeser_items:
                  type: array
                  description: ''
                  items:
                    $ref: '#/components/schemas/ItemStockParam'
                partner_items:
                  type: array
                  items:
                    $ref: '#/components/schemas/ItemStockParam'
            examples:
              example:
                value:
                  partner_player_id: 2
                  requeser_items:
                    - name: fiji_water
                      count: 0
                  partner_items:
                    - name: fiji_water
                      count: 0
      parameters: []
    parameters:
      - schema:
          type: string
        name: player_id
        in: path
        required: true
  /filed/current_location:
    put:
      summary: Player Move Whereabouts
      operationId: put-players-current_location
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    player_id:
                      type: integer
                    location:
                      $ref: '#/components/schemas/Location'
    parameters: []
  /filed/infection:
    parameters: []
    put:
      summary: Report Infection
      operationId: put-players-player_id-status
      responses:
        '200':
          description: 報告に成功した場合
          content:
            application/json:
              schema:
                type: object
                properties:
                  reporting_target_player_id:
                    type: number
                  counting_to_become_zombie:
                    type: number
      description: 全プレイヤーが感染していないかを確認する
      requestBody:
        content:
          application/json:
            schema:
              type: object
  /filed:
    get:
      summary: Creating Report
      operationId: post-report
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  zombie_percentage:
                    type: number
                    format: float
                    description: サインアップした人の中でゾンビになった割合
                  survivor_percentage:
                    type: number
                    description: サインアップした人の中でゾンビになった割合
                  average_amount_of_each_item_possessed:
                    type: number
                    description: 各アイテムの全生存者が持っている個数の平均
                  points_wasted:
                    type: integer
                    description: ゾンビになったり、死亡したりしたひとが持っていたアイテムのポイント
              examples:
                example-1:
                  value:
                    zombie_percentage: -3.402823669209385e+38
                    survivor_percentage: 0
                    average_amount_of_each_item_possessed: 0
                    points_wasted: 0
      description: ''
    parameters: []
components:
  schemas:
    Error:
      title: Error
      type: array
      items:
        type: string
      description: バリデーションエラーの文言がリスト形式で書かれている
    Inventory:
      title: Inventory
      type: object      
      description: プレイヤーが所持している各アイテムのリスト
      properties:
        player_id:
          type: integer
          example: 1
        item_stocks:
          type: array
          items:
            $ref: '#/components/schemas/ItemStock'
      required:
        - player_id
        - item_stocks
    Item:
      title: Item
      type: object
      description: |
        プレイヤーが使用するアイテム
        pointが同じ値のものと交換ができる
        交換する場合は、組み合わせができる 
        例 プレイヤーAは、1pointのアイテムを3個あげて、プレイヤーBから3ポイントのアイテムを1個もらう 
      properties:
        id:
          type: integer
        point:
          type: integer
          minimum: 0
          format: int32
          description: |-
            アイテムの価値
            この値を基準にトレードをする
        name:
          $ref: '#/components/schemas/ItemName'
        kind:
          type: string
          enum:
            - first_aid_kit
            - drink
            - weapone
      required:
        - id
        - point
        - name
        - kind
    ItemStock:
      title: ItemStock
      type: object
      description: Playerが所持しているそれぞれのItemの在庫
      properties:
        id:
          example: 1
          type: integer
        player_id:
          type: number
          example: 2
        item:
          $ref: '#/components/schemas/Item'
        stock_count:
          type: integer
          description: アイテムの残り所持数
          example: 3
      required:
        - player_id
    Location:
      title: Location
      type: object
      description: |-
        座標 
        経度と緯度は最大範囲が決まっている
      properties:
        lon:
          type: number
          description: |-
            現在Playerがいる経度
            詳細は https://ja.wikipedia.org/wiki/%E7%B5%8C%E5%BA%A6
            を参照
          format: float
          example: 3.3
          minimum: 0
          maximum: 10
        lat:
          type: number
          description: |-
            現在Playerがいる緯度 
            詳細は https://ja.wikipedia.org/wiki/%E7%B7%AF%E5%BA%A6
            を参照
          format: float
          example: 3.3
          minimum: 0
          maximum: 10
    Player:
      title: Player
      type: object
      description: |-
        操作されるキャラクター
        以下の状態を持っている
        新規参加者 生存者 ゾンビ 死亡者
      properties:
        id:
          example: 1
          type: integer
        name:
          type: string
          example: 鈴木 健
        age:
          type: integer
          format: int32
          minimum: 18
          maximum: 65
          description: 成人でかつ高齢者じゃない責任をとれる健康な年齢
        status:
          type: string
          description: |-
            プレイヤーの状態 
            生存しているかどうかがわかる
          enum:
            - survivor
            - zombie
            - deaths
            - newcomer
          example: survivor
        inventory:
          $ref: '#/components/schemas/Inventory'
        counting_to_become_zombie:
          type: integer
          description: 値が０になるとゾンビになる
          format: int32
          default: 5
          minimum: 0
        current_location:
          $ref: '#/components/schemas/Location'
      required:
        - id
        - name
        - age
        - status
        - counting_to_become_zombie
        - current_location
    ItemName:
      type: string
      title: ItemName
      enum:
        - fiji_water
        - campbel_soup
        - first_aid_pouch
        - ak47
      description: ''
    ItemStockParam:
      title: ItemStockParam
      type: object
      description: Inventory内のItemStockを操作するためのパラメーター
      properties:
        name:
          $ref: '#/components/schemas/ItemName'
        count:
          type: integer
          minimum: 0